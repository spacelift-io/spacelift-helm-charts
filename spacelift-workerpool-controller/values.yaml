controllerManager:
  # If you do not specify a list of namespaces here, the controller will be assigned a ClusterRole,
  # and will be able to manage WorkerPools across all namespaces in your cluster.
  # If you do not want to grant cluster wide permissions to the controller, you can specify a list
  # of namespaces. That will create a Role per namespace and bind it to the service account used by the controller.
  namespaces: []
  manager:
    args:
    - --health-probe-bind-address=:8081
    - --leader-elect
    containerSecurityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
    image:
      repository: public.ecr.aws/spacelift/kube-workerpool-controller
      tag: v0.0.19
    resources:
      limits:
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
    extraVolumeMounts: []
    extraPodLabels: {}
  replicas: 1
  annotations: {}
  podAnnotations: {}
  serviceAccount:
    create: true
    annotations: {}
    labels: {}
    # If you are using a custom service account, you can specify it here.
    # name:
  nodeSelector: {}
  tolerations: []
  topologySpreadConstraints: []
  extraLabels: {}
  extraVolumes: []
kubernetesClusterDomain: cluster.local
# The metric service will expose a metrics endpoint that can be scraped by a prometheus instance.
# This is disabled by default, enable this if you want to enable controller observability.
metricsService:
  enabled: false
  # Enabling secure will also create ClusterRole to enable authn/authz to the metrics endpoint through RBAC.
  # More details here https://book.kubebuilder.io/reference/metrics#by-using-authnauthz-enabled-by-default
  # Secure is enabled by default to be consistent with Kubebuilder defaults.
  #
  # If you want to avoid cluster roles, you can keep this set to false and configure a NetworkPolicu instead.
  # An example can be found in Kubebuilder docs here https://github.com/kubernetes-sigs/kubebuilder/blob/d063d5af162a772379a761fae5aaea8c91b877d4/docs/book/src/getting-started/testdata/project/config/network-policy/allow-metrics-traffic.yaml#L2
  secure: true
  enableHTTP2: false
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: metrics
  type: ClusterIP

spacelift-promex:
  enabled: false
