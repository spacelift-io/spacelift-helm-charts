replicaCount: 1

credentials:
  # create defines whether a secret should be created for the VCS Agent credentials. If you want to pass
  # the credentials in via a different method, set this to false and use the `vcs-agent.extraEnv`
  # value to set the `SPACELIFT_VCS_AGENT_POOL_TOKEN`, `SPACELIFT_VCS_AGENT_TARGET_BASE_ENDPOINT` and `SPACELIFT_VCS_AGENT_VENDOR` environment variables.
  create: true
  # token contains the token downloaded from Spacelift when creating your VCS Agent pool.
  token: ""
  # endpoint contains base endpoint address for the VCS vendor.
  endpoint: ""
  # vendor contains the VCS vendor to use.
  vendor: ""

image:
  repository: public.ecr.aws/spacelift/vcs-agent
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

containerName: vcsagent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

vcsagent:
  extraEnv: []
  # extraVolumeMounts adds extra volume mounts to the launcher container.

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
