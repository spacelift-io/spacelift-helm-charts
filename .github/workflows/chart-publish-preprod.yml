name: Preprod chart publish

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-chart-publish-preprod

jobs:
  registry:
    name: Publish the chart to the preprod Helm repository
    runs-on: ubuntu-latest
    env:
      HELM_VERSION: "3.7.1"
      REGISTRY_URL: "https://downloads.spacelift.dev/helm"
      CHART_VERSION_PREFIX: "0.0.1-preprod"
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Check out repository code
        uses: actions/checkout@master

      - name: Install Helm
        run: |
          curl -s https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz -o helm-v${HELM_VERSION}-linux-amd64.tar.gz
          tar -zxf helm-v${HELM_VERSION}-linux-amd64.tar.gz
          sudo mv linux-amd64/helm /usr/local/bin
          rm helm-v${HELM_VERSION}-linux-amd64.tar.gz
          rm -rf linux-amd64

      - name: Create output directory
        run: mkdir -p build/chart

      - name: Download existing index.yaml
        run: curl -fs ${REGISTRY_URL}/index.yaml -o build/index-current.yaml
        # The first time this step runs the index file won't exist, so allow the step to fail
        continue-on-error: true

      - name: Set chart version number
        run: |
          timestamp=$(date +'%s')
          echo "CHART_VERSION=${CHART_VERSION_PREFIX}.${timestamp}" >> $GITHUB_ENV

      - name: Lint chart
        run: helm lint .

      - name: Package chart
        run: |
          helm package --version "$CHART_VERSION" --destination build/chart .
          helm repo index build/chart --url "$REGISTRY_URL" --merge "build/index-current.yaml"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.PREPROD_AWS_REGION }}
          role-to-assume: ${{ secrets.PREPROD_AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900

      - name: Upload the chart to S3
        run: >-
          aws s3 sync
          build/chart s3://${{ secrets.PREPROD_AWS_S3_BUCKET }}/helm
          --no-progress

      - name: Invalidate cache
        run: >-
          aws cloudfront create-invalidation
          --distribution-id ${{ secrets.PREPROD_DISTRIBUTION }}
          --paths "/helm/*"
